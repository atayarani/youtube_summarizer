#!/usr/bin/env bash
set -e

########################################################################
# This script uploads test results to Testspace from a linux environment.
# It first verifies the presence of the Testspace client in the system.
# If missing, the client will be downloaded and installed.
# Next, it checks for the presence of the Testspace token.
# Finally, it uploads the test results and code coverage.
########################################################################

abort() {
	echo "ERROR: $1" >&2
	exit 1
}
check_or_download_client() {
	local TESTSPACE_DOWNLOAD_URL="https://testspace-client.s3.amazonaws.com/testspace-linux.tgz"
	local TESTSPACE_CLIENT_DESTINATION="${HOME}/testspace"
	local TESTSPACE_CLIENT_FILE="${TESTSPACE_CLIENT_DESTINATION}/testspace.tgz"

	# Ensure client installation directory
	mkdir -p "${TESTSPACE_CLIENT_DESTINATION}"

	# Check if the client executable is available
	if ! command -v testspace % >/dev/null; then
		echo "Testspace client not found. Downloading..."

		# Download testspace client only if it is not already downloaded
		if ! [[ -f ${TESTSPACE_CLIENT_FILE} ]]; then
			if ! curl --progress-bar -fsSL "${TESTSPACE_DOWNLOAD_URL}" -o "${TESTSPACE_CLIENT_FILE}"; then
				abort "Failed to download Testspace client from ${TESTSPACE_DOWNLOAD_URL}"
			fi
			echo "Successfully downloaded the Testspace client"
		fi
		# Extract testspace client
		tar xf "${TESTSPACE_CLIENT_FILE}" -C "${TESTSPACE_CLIENT_DESTINATION}"
		echo "Successfully installed the Testspace client"
	fi
}

check_for_token() {
	[[ -z ${TESTSPACE_TOKEN} ]] && abort "TESTSPACE_TOKEN is not set"
	return 0
}

upload_results() {
	local TESTSPACE_DOMAIN="atayarani.testspace.com"
	local TESTSPACE_PROJECT_NAME="atayarani:youtube_summarizer"
	local TESTSPACE_SPACE_NAME="update-0.4.0"
	local TESTSPACE_DESTINATION="${TESTSPACE_DOMAIN}/${TESTSPACE_PROJECT_NAME}/${TESTSPACE_SPACE_NAME}"
	local RESULTS_FILE="./results/pytest.xml"
	local COVERAGE_FILE="coverage.xml"

	if [[ -f ${RESULTS_FILE} ]] && [[ -f ${COVERAGE_FILE} ]]; then
		testspace "${RESULTS_FILE}" "${COVERAGE_FILE}" \
			"${TESTSPACE_TOKEN}:@${TESTSPACE_DESTINATION}"
	else
		echo "Failed to upload results"
	fi
}

main() {
	check_or_download_client
	check_for_token
	upload_results
}

main "$@"
